import { PopoverRoot } from './PopoverRoot';
export { popoverContentVariants } from './PopoverContent';
export { usePopover } from './PopoverRoot';
export declare const Popover: {
    Root: typeof PopoverRoot;
    /**
     * Popover.Trigger renders a `button` and has no default styling.
     */
    Trigger: (props: import("solid-js").JSX.ButtonHTMLAttributes<HTMLButtonElement> & {
        appearanceKey?: "notification" | "button" | "popoverContent" | "popoverTrigger" | "dropdownContent" | "dropdownTrigger" | "dropdownItem" | "dropdownItemLabel" | "dropdownItemLabelContainer" | "dropdownItemLeftIcon" | "dropdownItemRightIcon" | "tooltipContent" | "tooltipTrigger" | "back__button" | "skeletonText" | "skeletonAvatar" | "tabsRoot" | "tabsList" | "tabsContent" | "tabsTrigger" | "dots" | "root" | "bellIcon" | "bellContainer" | "bellDot" | "preferences__button" | "preferencesContainer" | "inboxHeader" | "loading" | "inbox__popoverTrigger" | "inbox__popoverContent" | "notificationList" | "notificationListEmptyNoticeContainer" | "notificationListEmptyNotice" | "notificationListEmptyNoticeIcon" | "notificationListNewNotificationsNoticeContainer" | "notificationListNewNotificationsNotice__button" | "notificationDot" | "notificationSubject" | "notificationBody" | "notificationBodyContainer" | "notificationImage" | "notificationDate" | "notificationDefaultActions" | "notificationCustomActions" | "notificationPrimaryAction__button" | "notificationSecondaryAction__button" | "notificationRead__button" | "notificationUnread__button" | "notificationArchive__button" | "notificationUnarchive__button" | "notificationsTabs__tabsRoot" | "notificationsTabs__tabsList" | "notificationsTabs__tabsContent" | "notificationsTabs__tabsTrigger" | "notificationsTabsTriggerLabel" | "notificationsTabsTriggerCount" | "inboxStatus__title" | "inboxStatus__dropdownTrigger" | "inboxStatus__dropdownContent" | "inboxStatus__dropdownItem" | "inboxStatus__dropdownItemLabel" | "inboxStatus__dropdownItemLabelContainer" | "inboxStatus__dropdownItemLeftIcon" | "inboxStatus__dropdownItemRightIcon" | "moreActionsContainer" | "moreActions__dropdownTrigger" | "moreActions__dropdownContent" | "moreActions__dropdownItem" | "moreActions__dropdownItemLabel" | "moreActions__dropdownItemLeftIcon" | "moreTabs__button" | "moreTabs__dots" | "moreTabs__dropdownTrigger" | "moreTabs__dropdownContent" | "moreTabs__dropdownItem" | "moreTabs__dropdownItemLabel" | "moreTabs__dropdownItemRightIcon" | "workflowContainer" | "workflowLabel" | "workflowLabelContainer" | "channelContainer" | "channelsContainer" | "channelLabel" | "channelLabelContainer" | "channelDescription" | "channelSwitchContainer" | "channelSwitch" | "channelSwitchThumb" | "preferencesHeader" | "preferencesHeader__back__button" | "preferencesHeader__title" | "preferencesLoadingContainer" | undefined;
        asChild?: ((props: any) => import("solid-js").JSX.Element) | undefined;
    }) => import("solid-js").JSX.Element;
    /**
     * Popover.Content renders a `div` and has popover specific styling.
     */
    Content: (props: import("solid-js").JSX.HTMLAttributes<HTMLDivElement> & {
        appearanceKey?: "notification" | "button" | "popoverContent" | "popoverTrigger" | "dropdownContent" | "dropdownTrigger" | "dropdownItem" | "dropdownItemLabel" | "dropdownItemLabelContainer" | "dropdownItemLeftIcon" | "dropdownItemRightIcon" | "tooltipContent" | "tooltipTrigger" | "back__button" | "skeletonText" | "skeletonAvatar" | "tabsRoot" | "tabsList" | "tabsContent" | "tabsTrigger" | "dots" | "root" | "bellIcon" | "bellContainer" | "bellDot" | "preferences__button" | "preferencesContainer" | "inboxHeader" | "loading" | "inbox__popoverTrigger" | "inbox__popoverContent" | "notificationList" | "notificationListEmptyNoticeContainer" | "notificationListEmptyNotice" | "notificationListEmptyNoticeIcon" | "notificationListNewNotificationsNoticeContainer" | "notificationListNewNotificationsNotice__button" | "notificationDot" | "notificationSubject" | "notificationBody" | "notificationBodyContainer" | "notificationImage" | "notificationDate" | "notificationDefaultActions" | "notificationCustomActions" | "notificationPrimaryAction__button" | "notificationSecondaryAction__button" | "notificationRead__button" | "notificationUnread__button" | "notificationArchive__button" | "notificationUnarchive__button" | "notificationsTabs__tabsRoot" | "notificationsTabs__tabsList" | "notificationsTabs__tabsContent" | "notificationsTabs__tabsTrigger" | "notificationsTabsTriggerLabel" | "notificationsTabsTriggerCount" | "inboxStatus__title" | "inboxStatus__dropdownTrigger" | "inboxStatus__dropdownContent" | "inboxStatus__dropdownItem" | "inboxStatus__dropdownItemLabel" | "inboxStatus__dropdownItemLabelContainer" | "inboxStatus__dropdownItemLeftIcon" | "inboxStatus__dropdownItemRightIcon" | "moreActionsContainer" | "moreActions__dropdownTrigger" | "moreActions__dropdownContent" | "moreActions__dropdownItem" | "moreActions__dropdownItemLabel" | "moreActions__dropdownItemLeftIcon" | "moreTabs__button" | "moreTabs__dots" | "moreTabs__dropdownTrigger" | "moreTabs__dropdownContent" | "moreTabs__dropdownItem" | "moreTabs__dropdownItemLabel" | "moreTabs__dropdownItemRightIcon" | "workflowContainer" | "workflowLabel" | "workflowLabelContainer" | "channelContainer" | "channelsContainer" | "channelLabel" | "channelLabelContainer" | "channelDescription" | "channelSwitchContainer" | "channelSwitch" | "channelSwitchThumb" | "preferencesHeader" | "preferencesHeader__back__button" | "preferencesHeader__title" | "preferencesLoadingContainer" | undefined;
    }) => import("solid-js").JSX.Element;
    /**
     * Popover.Close renders a `button` and has no styling.
     * Closes the popover when clicked.
     * `onClick` function is propagated.
     */
    Close: (props: import("solid-js").JSX.ButtonHTMLAttributes<HTMLButtonElement> & {
        asChild?: ((props: any) => import("solid-js").JSX.Element) | undefined;
    }) => import("solid-js").JSX.Element;
};
//# sourceMappingURL=index.d.ts.map